<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>MQTT Gateway</title>
  <link href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons' rel="stylesheet" type="text/css">
  <link href="/css/vuetify-v1.0.0.min.css" rel="stylesheet" type="text/css"></link>
  <link href="/css/style.css" rel="stylesheet" type="text/css">
</head>
<body>
  <div id="app">
    <v-app>
    <!--  <v-navigation-drawer
        clipped-left
        stateless="true"
        v-model="drawer"
        app
      >
        <v-list>
          <v-list-tile :value="true" v-for="(item, i) in items" :key="item.title">
            <v-list-tile-action>
              <v-icon light v-html="item.icon"></v-icon>
            </v-list-tile-action>
            <v-list-tile-content>
              <v-list-tile-title v-text="item.title"></v-list-tile-title>
            </v-list-tile-content>
          </v-list-tile>
        </v-list>
      </v-navigation-drawer> -->
      <v-toolbar fixed app>
      <!--  <v-toolbar-side-icon @click.native.stop="drawer = !drawer"></v-toolbar-side-icon> -->
        <v-toolbar-title v-text="title"></v-toolbar-title>
        <v-spacer></v-spacer>
        <v-toolbar-items>
          <v-btn flat @click.native="exportConfiguration()">EXPORT</v-btn>
          <v-btn flat @click.native="importConfiguration()">IMPORT</v-btn>
          <v-btn flat @click.native="saveConfiguration()">SAVE</v-btn>
        </v-toolbar-items>
      </v-toolbar>
      <main>
        <v-content>
          <v-container fluid>

            <v-card>
              <v-card-title>
                Tags Configuration
                <v-spacer></v-spacer>
                <v-text-field
                append-icon="search"
                label="Search"
                single-line
                hide-details
                v-model="search"
                ></v-text-field>
              </v-card-title>
              <v-data-table
              v-bind:headers="headers"
              v-bind:items="tags"
              v-model="selected"
              :rows-per-page-items="[15,{'text':'All','value':-1}]"
              item-key="_id"
              select-all
              :search="search"
              :filter="searchFilter"
              class="elevation-1"
              >
              <template slot="headerCell" slot-scope="props">
                <v-tooltip bottom>
                  <span slot="activator">
                    {{ props.header.text }}
                  </span>
                  <span>
                    {{ props.header.text }}
                  </span>
                </v-tooltip>
              </template>
              <template slot="items" slot-scope="props">
                <td>
                  <v-checkbox
                  primary
                  hide-details
                  v-model="props.selected"
                  ></v-checkbox>
                </td>
                <td>{{ props.item.name.join('.') }}</td>
                <td>{{ getConnection(props.item) }}</td>
                <td>{{ (props.item.type == 'BIT' && props.item.permission != 'W' ? props.item.reg + '.' + props.item.bitRead : props.item.reg) }}</td>
                <td>{{ props.item.nReg }}</td>
                <td>{{ props.item.permission }}</td>
                <td>{{ (props.item.type == 'BIT' && props.item.permission != 'R' ? props.item.regWrite + '.' + props.item.bitWrite : props.item.regWrite) }}</td>
                <td>{{ props.item.fc }}</td>
                <td>{{ props.item.type }}</td>
                <td>{{ props.item.postOperation }}</td>
                <td>{{ (props.item.onChange ? 'Send if changes ' : 'Send every read ') +
                  (props.item.sendEvery ? 'every ' +  props.item.sendEvery + 's': '')}}</td>
                  <td class="justify-center layout px-0">
                    <v-btn icon class="mx-0" @click="editTag(props.item)">
                      <v-icon color="teal">edit</v-icon>
                    </v-btn>
                    <v-btn icon class="mx-0" @click="deleteTag(props.item)">
                      <v-icon color="pink">delete</v-icon>
                    </v-btn>
                    <v-btn icon class="mx-0" @click="cloneTag(props.item)">
                      <v-icon>content_copy</v-icon>
                    </v-btn>
                  </td>
                </template>
              </v-data-table>
            </v-card>

          </v-container>
        </v-content>

      <v-speed-dial
      light
      fab
      fixed
      bottom
      right
      v-model="fab"
      >
      <v-btn
        slot="activator"
        color="blue darken-2"
        dark
        fab
        hover
        v-model="fab"
      >
        <v-icon>add</v-icon>
        <v-icon>close</v-icon>
      </v-btn>

      <v-btn
        fab
        dark
        small
        color="green"
        @click.stop="openDialog()"
      >
      <v-icon>local_offer</v-icon>
    </v-btn>

      <v-btn
        fab
        dark
        small
        color="indigo"
        @click.stop="openDialogDevice()"
      >
        <v-icon>style</v-icon>
      </v-btn>

      <v-btn v-if="selected && selected.length > 0"
        fab
        dark
        small
        color="red"
        @click.stop="deleteSelected()"
      >
      <v-icon>delete</v-icon>
      </v-btn>

      <v-btn v-if="selected && selected.length > 0"
        fab
        dark
        small
        color="yellow"
        @click.stop="cloneSelected()"
      >
      <v-icon>content_copy</v-icon>
      </v-btn>

    </v-speed-dial>


    </main>


    <v-snackbar
      :timeout="3000"
      :bottom="true"
      :multi-line="false"
      :vertical="false"
      v-model="snackbar"
    >
      {{ snackbarText }}
      <v-btn flat @click.native="snackbar = false">Close</v-btn>
    </v-snackbar>

    </v-app>

<!-- DIALOG TAG -->
    <v-dialog v-model="dialog_tag" persistent max-width="500px">
      <v-card>
        <v-card-title>
          <span class="headline">{{ dialog_tag_title }}</span>
        </v-card-title>
        <v-card-text>
          <v-container grid-list-md>
            <v-form v-model="valid" ref="form" lazy-validation>
              <v-layout wrap>
                <v-flex xs12>
                  <v-select
                  label="Tag Name"
                  chips
                  :rules="[rules.required, rules.unique]"
                  tags
                  solo
                  clearable
                  :items="tag_names"
                  multiple
                  autocomplete="true"
                  item-text="name"
                  item-value="name"
                  append-icon=""
                  prepend-icon="local_offer"
                  v-model="newTag.name"
                  >
                  <template slot="selection" slot-scope="data">
                    <v-chip
                    close
                    @input="removeChip(data.item)"
                    :selected="data.selected"
                    >
                    <strong>{{ data.item }}</strong>
                  </v-chip>
                </template>
                <template slot="item" slot-scope="data">
                  <template v-if="typeof data.item !== 'object'">
                    <v-list-tile-content v-text="data.item"></v-list-tile-content>
                  </template>
                  <template v-else>
                    <v-list-tile-content>
                      <v-list-tile-title v-html="data.item.name"></v-list-tile-title>
                      <v-list-tile-sub-title v-html="data.item.group"></v-list-tile-sub-title>
                    </v-list-tile-content>
                  </template>
                </template>
              </v-select>
            </v-flex>
            <v-flex xs12>
              <v-switch
              hint="Choose between Serial or TCP client"
              persistent-hint="true"
              label="TCP"
              v-model="newTag.tcp"
              ></v-switch>
            </v-flex>
            <v-flex v-if="newTag.tcp" xs12 sm6 md4>
              <v-text-field
              v-model="newTag.address"
              label="Address"
              hint="Modbus TCP address"
              required
              >
            </v-text-field>
          </v-flex>
          <v-flex v-if="newTag.tcp" xs12 sm6 md4>
            <v-text-field
            v-model="newTag.tcp_port"
            label="Port"
            hint="Address port"
            required
            >
          </v-text-field>
        </v-flex>
          <v-flex v-if="!newTag.tcp" xs12 sm6 md4>
          <v-select
          v-model="newTag.port"
          label="Serial Port"
          hint="Ex /dev/ttyUSB0"
          combobox
          autocomplete
          required
          :items="serial_ports"
          ></v-select>
        </v-flex>
        <v-flex v-if="!newTag.tcp" xs12 sm6 md4>
        <v-select
        v-model="newTag.baud_rate"
        label="Baud Rate"
        combobox
        autocomplete
        required
        :items="[75,110,300,1200,2400,4800,9600,19200,38400,57600,115200]"
        ></v-select>
      </v-flex>
        <v-flex xs12 sm6 md4>
          <v-text-field
          :rules="[rules.required]"
          v-model="newTag.unitID"
          label="Unit ID"
          type="number"
          hint="Default '0'"
          required
          >
        </v-text-field>
      </v-flex>
      <v-flex xs12>
        <v-select
        :rules="[rules.required]"
        v-model="newTag.fc"
        label="FC"
        required
        :items="[{text:'3: Read Registers', value:3}, {text:'1: Read Coils', value:1}]"
        ></v-select>
      </v-flex>
      <v-flex v-if="newTag.permission != 'W'" xs12 sm6>
        <v-text-field
        :rules="[rules.required]"
        v-model="newTag.reg"
        label="Read Register/Coil"
        hint="The Modbus register address to read"
        type="number"
        required
        >
      </v-text-field>
    </v-flex>
    <v-flex v-if="newTag.type == 'BIT' && newTag.permission != 'W'" xs12 sm6>
      <v-text-field
      v-model="newTag.bitRead"
      label="Bit Read"
      hint="The bit index [0-15] of the register to read"
      required
      type="number"
      ></v-text-field>
    </v-flex>
    <v-flex v-if="newTag.permission != 'R'" xs12 sm6>
        <v-text-field
        v-model="newTag.regWrite"
        label="Write Register/Coil"
        hint="The Modbus register address used to write"
        type="number"
        required
        >
      </v-text-field>
    </v-flex>
    <v-flex v-if="newTag.type == 'BIT' && newTag.permission != 'R'" xs12 sm6>
      <v-text-field
      v-model="newTag.bitWrite"
      label="Bit Write"
      hint="The bit index [0-15] of the register to write"
      required
      type="number"
      ></v-text-field>
    </v-flex>
    <v-flex xs12 sm6>
      <v-text-field
      :rules="[rules.required]"
      v-model="newTag.nReg"
      label="N° registers"
      hint="Total registers to read"
      required
      type="number"
      ></v-text-field>
    </v-flex>
    <v-flex xs12 sm6>
    <v-select
    :rules="[rules.required]"
    v-model="newTag.permission"
    label="Permission"
    required
    :items="['R', 'W', 'R/W']"
    ></v-select>
  </v-flex>
    <v-flex xs12 sm6>
      <v-select
      :rules="[rules.required]"
      v-model="newTag.type"
      label="Type"
      required
      :items="['INT', 'INT32', 'UINT', 'UINT32', 'FLOAT', 'ARRAY', 'BIT-ARRAY', 'BIT']"
      ></v-select>
    </v-flex>
    <v-flex xs12 sm6 >
      <v-text-field
      v-model="newTag.postOperation"
      label="Post Operation"
      hint="Operation to do after a value is read"
      hint="Ex '/10' '/100' '*10' '*100'"
      >
    </v-text-field>
  </v-flex>
    <v-flex xs12 sm6>
      <v-checkbox
      hint="Send updates just when it changes"
      persistent-hint="true"
      label="Send if change"
      v-model="newTag.onChange"
      ></v-checkbox>
    </v-flex>
    <v-flex xs12 sm6>
      <v-text-field
      v-model="newTag.sendEvery"
      :rules="[rules.required]"
      label="Send every"
      hint="Seconds to wait before send an update"
      required
      type="number"
      ></v-text-field>
    </v-flex>
  </v-layout>
</v-form>
</v-container>
      </v-card-text>
        <v-card-actions>
          <v-spacer></v-spacer>
          <v-btn color="blue darken-1" flat @click.native="closeDialog()">Close</v-btn>
          <v-btn color="blue darken-1" :disabled="!valid" flat @click.native="addTag()">Save</v-btn>
        </v-card-actions>
      </v-card>
    </v-dialog>

    <!-- END DIALOG TAG -->

    <!-- DIALOG DEVICE -->
        <v-dialog v-model="dialog_device" persistent max-width="500px">
          <v-card>
            <v-card-title>
              <span class="headline">Add device</span>
            </v-card-title>
            <v-card-text>
              <v-container grid-list-md>
                <v-form v-model="valid_device" ref="form_device" lazy-validation>
                  <v-layout wrap>
                    <v-flex xs12>
                      <v-select
                      label="Device name"
                      chips
                      :rules="[rules.required]"
                      tags
                      solo
                      clearable
                      append-icon=""
                      prepend-icon="local_offer"
                      v-model="newDevice.name"
                      >
                      <template slot="selection" slot-scope="data">
                        <v-chip
                        close
                        @input="removeChip(data.item)"
                        :selected="data.selected"
                        >
                        <strong>{{ data.item }}</strong>
                      </v-chip>
                    </template>
                  </v-select>
                </v-flex>
                <v-flex xs12>
                  <v-switch
                  hint="Choose between Serial or TCP client"
                  persistent-hint="true"
                  label="TCP"
                  v-model="newDevice.tcp"
                  ></v-switch>
                </v-flex>
                <v-flex v-if="newDevice.tcp" xs12 sm6 >
                  <v-text-field
                  v-model="newDevice.address"
                  label="Address"
                  hint="Modbus TCP address"
                  required
                  >
                </v-text-field>
              </v-flex>
              <v-flex v-if="newDevice.tcp" xs12 sm6 >
                <v-text-field
                v-model="newDevice.tcp_port"
                label="Port"
                hint="Address port"
                required
                >
              </v-text-field>
            </v-flex>
              <v-flex v-if="!newDevice.tcp" xs12 sm6>
              <v-select
              v-model="newDevice.port"
              label="Serial Port"
              hint="Ex /dev/ttyUSB0"
              combobox
              autocomplete
              required
              :items="serial_ports"
              ></v-select>
            </v-flex>
            <v-flex v-if="!newDevice.tcp" xs12 sm6>
            <v-select
            v-model="newDevice.baud_rate"
            label="Baud Rate"
            combobox
            autocomplete
            required
            :items="[75,110,300,1200,2400,4800,9600,19200,38400,57600,115200]"
            ></v-select>
          </v-flex>
            <v-flex xs12 sm6 md4>
              <v-text-field
              :rules="[rules.required]"
              v-model="newDevice.unitID"
              label="Unit ID"
              type="number"
              hint="Default '0'"
              required
              >
            </v-text-field>
          </v-flex>
          <v-flex xs12 sm6 md4>
            <v-text-field
            :rules="[rules.required]"
            v-model="newDevice.regStart"
            label="Registers start address"
            hint="The Modbus register address to start from"
            type="number"
            required
            >
          </v-text-field>
        </v-flex>
          <v-flex xs12 sm6 md4>
            <v-text-field
            :rules="[rules.required]"
            v-model="newDevice.coilStart"
            label="Coils start address"
            hint="The Modbus Coil address to start from"
            type="number"
            required
            >
          </v-text-field>
        </v-flex>
        <v-flex xs12 sm6>
        <v-select
        :rules="[rules.required]"
        v-model="newDevice.type"
        return-object
        label="Device type"
        required
        :items="devices"
        ></v-select>
      </v-flex>

      </v-layout>
    </v-form>
    </v-container>
          </v-card-text>
            <v-card-actions>
              <v-spacer></v-spacer>
              <v-btn color="blue darken-1" flat @click.native="closeDialogDevice()">Close</v-btn>
              <v-btn color="blue darken-1" :disabled="!valid_device" flat @click.native="addDevice()">Save</v-btn>
            </v-card-actions>
          </v-card>
        </v-dialog>

        <!-- END DIALOG DEVICE -->


    <%# <v-dialog v-model="dialog_delete" max-width="290">
      <v-card>
        <v-card-title class="headline">Delete selected Tag?</v-card-title>
        <v-card-text>This operation cannot be undone.</v-card-text>
        <v-card-actions>
          <v-spacer></v-spacer>
          <v-btn color="green darken-1" flat="flat" @click.native="dialog_delete = false">No</v-btn>
          <v-btn color="green darken-1" flat="flat" @click.native="deleteTag()">Yes</v-btn>
        </v-card-actions>
      </v-card>
    </v-dialog>%>

  </div>

  <script src="/js/vue.min.js"></script>
  <script src="/js/vuetify-v1.0.0.min.js"></script>
  <script src="/js/axios.min.js"></script>
  <script src="/js/index.js"></script>

</body>
</html>
